{"remainingRequest":"/Users/apple/Desktop/simple-twitter-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/simple-twitter-vue/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&","dependencies":[{"path":"/Users/apple/Desktop/simple-twitter-vue/src/views/Login.vue","mtime":1665178833900},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/css-loader/dist/cjs.js","mtime":1665037750287},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665037757708},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/postcss-loader/src/index.js","mtime":1665037753874},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/sass-loader/dist/cjs.js","mtime":1665037756602},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/cache-loader/dist/cjs.js","mtime":1665037748930},{"path":"/Users/apple/Desktop/simple-twitter-vue/node_modules/vue-loader/lib/index.js","mtime":1665037757708}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uL2Fzc2V0cy9zY3NzL2xvZ2luLnNjc3MiOwo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AA6JA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mx-auto\" style=\"width: 400px\">\n    <div class=\"mx-auto\" style=\"width: 40px\">\n      <img\n        class=\"mx-auto mt-5\"\n        width=\"40px\"\n        src=\"https://i.postimg.cc/Dfp23k8g/logo-2x.png\"\n        alt=\"LogoImage\"\n      />\n    </div>\n    <h3 class=\"title text-center font-weight-bold mt-4\">登入 Alphitter</h3>\n\n    <form @submit.prevent.stop=\"handleSubmit\">\n      <div class=\"form-wrapper\">\n        <label for=\"account\">帳號</label>\n        <div>\n          <input\n            id=\"account\"\n            v-model=\"account\"\n            name=\"account\"\n            type=\"text\"\n            class=\"form\"\n            placeholder=\"請輸入帳號\"\n            required\n            autofocus\n          />\n          <div class=\"error-alert\">\n            <span class=\"msg\" v-if=\"errorMsg === 'This account didn\\'t exist!'\"\n              >帳號不存在</span\n            >\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-wrapper\">\n        <label for=\"password\">密碼</label>\n        <div>\n          <input\n            id=\"password\"\n            v-model=\"password\"\n            name=\"password\"\n            type=\"password\"\n            class=\"form\"\n            placeholder=\"請輸入密碼\"\n            autocomplete=\"current-password\"\n            required\n          />\n          <div class=\"error-alert\">\n            <span class=\"msg\" v-if=\"errorMsg === 'password is incorrect！'\"\n              >密碼錯誤</span\n            >\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-4\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-info btn-singin\"\n          :disabled=\"isProcessing\"\n        >\n          {{ isProcessing ? \"驗證中\" : \"登入\" }}\n        </button>\n      </div>\n    </form>\n    <div class=\"d-flex mt-4 justify-content-end\">\n      <router-link class=\"mx-1\" to=\"/signup\"> 註冊 </router-link>\n      <span>・</span>\n      <router-link class=\"mx-1\" to=\"/admin\"> 後台登入 </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\n// import { Toast } from \"./../utils/helpers\";\n// import authorizationAPI from \"./../apis/authorization\";\n\nexport default {\n  name: \"LogIn\",\n  data() {\n    return {\n      account: \"\",\n      password: \"\",\n      isProcessing: false,\n      errorMsg: \"\",\n    };\n  },\n  // methods: {\n  //   async handleSubmit() {\n  //     try {\n  //       // 重新設定錯誤訊息\n  //       this.errorMsg = \"\";\n\n  //       // 表單驗證失敗：帳號或密碼沒有填寫\n  //       if (!this.account || !this.password) {\n  //         Toast.fire({\n  //           icon: \"warning\",\n  //           title: \"請輸入帳號和密碼\",\n  //         });\n  //         return;\n  //       }\n\n  //       // 表單驗證成功：帳密皆有填寫\n  //       // STEP1. 讓登入按鈕失效\n  //       this.isProcessing = true;\n\n  //       // STEP2. 將帳密透過 API 送回伺服器驗證\n  //       const { data } = await authorizationAPI.signIn({\n  //         account: this.account,\n  //         password: this.password,\n  //       });\n\n  //       // STEP3-1. 帳密驗證失敗，API 回傳錯誤\n  //       if (data.status === \"error\") {\n  //         throw new Error(data.message);\n  //       }\n\n  //       // STEP3-2. 帳密驗證成功\n  //       // 將 token 存在 localStorage 裡\n  //       localStorage.setItem(\"token\", data.token);\n  //       // 把 API 回傳的目前使用者資料存進 Vuex 裡\n  //       this.$store.commit(\"setCurrentUser\", data.user);\n  //       // 登入成功, 直接轉址到首頁 （不需還原 isProcessing 的狀態）\n  //       this.$router.push(\"/main\");\n  //     } catch (error) {\n  //       this.password = \"\"; // 帳號或密碼輸入錯誤後，將密碼欄位清空\n  //       this.isProcessing = false; // 因為登入失敗，所以要把按鈕狀態還原\n\n  //       // 錯誤通知處理\n  //       console.error(error.message);\n  //       if (error.message === \"This account didn't exist!\") {\n  //         this.errorMsg = error.message;\n  //         Toast.fire({\n  //           icon: \"error\",\n  //           title: \"帳號不存在，請重新嘗試\",\n  //         });\n  //       } else if (error.message === \"password is incorrect！\") {\n  //         this.errorMsg = error.message;\n  //         Toast.fire({\n  //           icon: \"error\",\n  //           title: \"密碼錯誤，請重新嘗試\",\n  //         });\n  //       } else {\n  //         this.errorMsg = error.message;\n  //         Toast.fire({\n  //           icon: \"error\",\n  //           title: \"無法成功登入，請稍後再試\",\n  //         });\n  //       }\n  //     }\n  //   },\n  // },\n};\n</script>\n\n\n<style lang=\"scss\">\n@import \"../assets/scss/login.scss\";\n</style>"]}]}